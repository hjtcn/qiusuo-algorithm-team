/*
134. 加油站
在一条环路上有 N 个加油站，其中第 i 个加油站有汽油 gas[i] 升。

你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。

如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1。

说明: 

如果题目有解，该答案即为唯一答案。
输入数组均为非空数组，且长度相同。
输入数组中的元素均为非负数。
示例 1:

输入: 
gas  = [1,2,3,4,5]
cost = [3,4,5,1,2]

输出: 3

解释:
从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油
开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油
开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油
开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油
开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油
开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。
因此，3 可为起始索引。
示例 2:

输入: 
gas  = [2,3,4]
cost = [3,4,3]

输出: -1

解释:
你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。
我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油
开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油
开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油
你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。
因此，无论怎样，你都不可能绕环路行驶一周。

*/
/*
    思路：
    暴力模拟：转圈一周，先把加油数组和消耗数组扩展一倍。然后遍历每一个起始位置i,截止在i+len,来判断sum和是否<0,出现小于0.这个起始位置就不对，跳出内部循环，sum大于0，当前i就是目标起始位置了，直接返回。跳出两层循环，没找到起始位置，就直接返回-1了

    题解：
    贪心：所剩油距离0最远的位置(负的最厉害的位置)的下个位置就是目标其实位置。
    
*/

var canCompleteCircuit = function(gas, cost) {
    let len=gas.length;
    for(let i=0;i<2*len;i++){
       if(i>=len){
           gas[i]=gas[i-len]
           cost[i]=cost[i-len]
       }
    }
    for(let i=0;i<len;i++){
        sum=0
        for(let j=i;j<i+len;j++){
           sum+=gas[j]-cost[j]
           if(sum<0){
               break;
           }
        }
        if(sum>=0){
            return i
        }
    }
    return -1
}
/*
    时间复杂度：O(N^2)
    空间复杂度：O(1)
*/

// @lc code=end

var canCompleteCircuit = function(gas, cost) {
   let len=gas.length,spare=0,min=Infinity,maxIndex=0
   for(let i=0;i<len;i++){
       spare+=gas[i]-cost[i]
      if(min>spare){
       min=spare
       maxIndex=i
      }
   } 
   return spare>=0?(maxIndex+1)%len:-1
};
/*
    时间复杂度：O(N)
    空间复杂度：O(1)
*/

/*
    没有确切贪心思路的时候，一定记得先暴力模拟。
    太贪心反而会影响思路。。。。
    
    看到题解中的一句话解释了方法二：
    当你走向低谷的时候，象征转折点的加油站也快到了。
*/