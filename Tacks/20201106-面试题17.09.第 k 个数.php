<?php

/*
 
    [面试题 17.09.] 第 k 个数

    https://leetcode-cn.com/problems/get-kth-magic-number-lcci/

题目

    有些数的素因子只有 3，5，7，请设计一个算法找出第 k 个数。
    注意，不是必须有这些素因子，而是必须不包含其他的素因子。例如，前几个数按顺序应该是 1，3，5，7，9，15，21。

示例：
    输入: k = 5
    输出: 9

*/

// @lc code=start
class Solution {

    /**
     * @param Integer $k
     * @return Integer
     */
    // 执行用时：4 ms, 在所有 PHP 提交中击败了100.00%的用户
    // 内存消耗：15.4 MB, 在所有 PHP 提交中击败了16.67%的用户
    function getKthMagicNumber($k) {
        $p3 = $p5 = $p7 = 0;
        $dp = [];
        $dp[0] = 1;
        for($i=1; $i<$k; $i++) {
            $dp[$i] = min($dp[$p3]*3 , min($dp[$p5]*5, $dp[$p7]*7));
            // 如果当前值与某类指针指向的值相同，则后移指针【每轮三个if判断必须都执行，防止排列组合之后是重复的值】.
            if($dp[$i] == $dp[$p3]*3) $p3++; // 如果当前是丑数，然后就++
            if($dp[$i] == $dp[$p5]*5) $p5++;
            if($dp[$i] == $dp[$p7]*7) $p7++;
        }
        return $dp[$k-1];// 返回第k个数
    }
}

 
// @lc code=end


/*

定义：符合题目要求的也就是 只有素因子 3 5 7 这些整数。

也就是一个数列的话，如果有丑数，肯定是由前面某个丑数 *3 / *5 / *7 得到的

一个丑数 *3 / *5 / *7 就会得到某个更大的丑数。

【动态规划】

那么看下面三个数列，我定义一个数组ugly[]
(1) ugly[0]*3  ugly[1]*3  ugly[2]*3  ugly[3]*3  ....
(2) ugly[0]*5  ugly[1]*5  ugly[2]*5  ugly[3]*5  ....
(3) ugly[0]*7  ugly[1]*7  ugly[2]*7  ugly[3]*7  ....

初始化所有指针都指向第一个丑数，即1

这三个数列合并在一起就是更丑的数列，合并有序线性表


定义三个指针
p3 p5 p7 分别指向上面三个数列
下一个丑数一定是这三个中间的最小的值，然后指针再向后移动
 
dp[1] = Min(dp[p3]*3, dp[p5]*5, dp[p7]*7)  = 3
        Min(1*3, 1*5, 1*7)
        dp[1] = 3
        因此p3后移，即p3++，p3=1
dp[2] = Min(dp[p3]*3, dp[p5]*5, dp[7]*7)  = 5
        Min(3*3, 1*5, 1*7)
        dp[2] = 5
        因此p5后移，p5++，p5=1
dp[3] = Min(dp[p3]*3, dp[p5]*5, dp[p7]*7)  = 7
        Min(3*3, 3*5, 1*7)
        dp[3]=7
        因此p7后移，即p7++，p7=1
dp[4] = Min(dp[p3]*3, dp[p5]*5, dp[p7]*7) = 9
        Min(dp[1]*3, dp[1]*5, dp[1]*7)
        dp[4]= Min(3*3, 3*5, 3*7) = 9
        因此p3++ p3=2
dp[5] = Min(dp[p3]*3, dp[p5]*5, dp[p7]*7) = 15
        Min(dp[2]*3, dp[1]*5, dp[1]*7)
        dp[5]= Min(5*3, 3*5, 3*7) = 15
     
        if($dp[$i] == $dp[$p3]*3) $p3++; //    15 = 5*3 p3++=>3
        if($dp[$i] == $dp[$p5]*5) $p5++; //    15 = 3*5 p5++=>2
        if($dp[$i] == $dp[$p7]*7) $p7++; 

dp[6] = Min(dp[p3]*3, dp[p5]*5, dp[p7]*7) = 15  
        Min(dp[3]*3, dp[1]*5, dp[1]*7)
        dp[6]= Min(7*3, 2*5, 3*7) = 15
 
*/